{"version":3,"file":"static/js/236.b3cdeffb.chunk.js","mappings":"qNACA,EAAsC,wCAAtC,EAAkG,sCAAlG,EAA4J,sCAA5J,EAAuN,uC,UCmGvN,EA/FmB,WAEf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAqBE,EAAAA,EAAAA,MAAdC,GAAP,eAEMC,EAAgB,SAAAC,GAElB,MAAwBA,EAAEC,OAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,OAAQX,GACJ,IAAK,OACDC,EAAQU,GACR,MACJ,IAAK,SACDR,EAAUQ,GACV,MACJ,QACI,SAkCZ,OACI,iBAAKC,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,iCAEA,kBAAOC,SAlBQ,SAAAL,GAEvBA,EAAEM,iBAlBkB,SAAAC,GAKhB,GAHIZ,EAAKa,KAAI,SAAAC,GAAO,OACZA,EAAQlB,KAAKmB,iBAEJC,SAASJ,EAAMhB,KAAKmB,eAOjC,OAAOE,MAAM,GAAD,OAAIL,EAAMhB,KAAV,6BANZO,EAAWS,GAEXf,EAAQ,IACRE,EAAU,IAiBlBmB,CANgB,CAChBtB,KAAMA,EACNE,OAAQA,KAYA,WACI,kBAAOqB,QAAQ,GAAf,UACI,kBACIC,KAAK,OACLZ,UAAWC,EACXY,YAAY,eACZzB,KAAK,OACL0B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRjB,MAAOX,EACP6B,SAAUrB,OAGlB,kBAAOe,QAAQ,GAAf,UACI,kBACIC,KAAK,MACLZ,UAAWC,EACXY,YAAY,eACZzB,KAAK,SACL0B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRjB,MAAOT,EACP2B,SAAUrB,OAGlB,mBACIgB,KAAK,SACLZ,UAAWC,EAFf","sources":["webpack://react-homework-template/./src/components/newContact/newContact.module.css?c0b3","components/newContact/newContact.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"newContact__wrapper\":\"newContact_newContact__wrapper__BwpyZ\",\"newContact__title\":\"newContact_newContact__title__8n4Js\",\"newContact__input\":\"newContact_newContact__input__YTae1\",\"newContact__button\":\"newContact_newContact__button__DmTe3\"};","import { useState } from \"react\";\nimport { useCreateContactMutation, useGetContactsQuery} from \"features/phoneBookAPI\";\nimport styles from \"./newContact.module.css\"\n\n\nconst NewContact = () => {\n\n    const [name, setName] = useState(\"\");\n    const [number, setNumber] = useState(\"\");\n\n    const { data } = useGetContactsQuery();\n    const [addContact] = useCreateContactMutation();\n    \n    const onInputChange = e => {\n        \n        const { name, value } = e.target\n        \n        switch (name) {\n            case \"name\":\n                setName(value)\n                break;\n            case \"number\":\n                setNumber(value)\n                break;\n            default:\n                return;\n        }    \n    }\n    \n    const addContacts = input => {\n        const contactName =\n            data.map(contact =>\n                contact.name.toLowerCase())\n\n        if (!contactName.includes(input.name.toLowerCase())) {\n            addContact(input)\n\n            setName(\"\")\n            setNumber(\"\")\n\n        } else {\n            return alert(`${input.name} is allready in contacts`)\n        } \n    };\n    \n    const onSubmitHandle = e => {\n\n    e.preventDefault();\n        \n    const contact = {\n    name: name,\n    number: number,\n    \n    }\n    \n    addContacts(contact)\n\n    };\n\n    return (\n        <div className={styles.newContact__wrapper}>\n            <h2 className={styles.newContact__title}> + Add new contact</h2> \n            \n            <form  onSubmit={onSubmitHandle}>\n                <label htmlFor=\"\">\n                    <input\n                        type=\"text\"\n                        className={styles.newContact__input}\n                        placeholder=\"Contact name\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        value={name}\n                        onChange={onInputChange}\n                        />\n                </label>\n                <label htmlFor=\"\">\n                    <input\n                        type=\"tel\"\n                        className={styles.newContact__input}\n                        placeholder=\"Phone number\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        value={number}\n                        onChange={onInputChange}\n                        />\n                </label>\n                <button\n                    type=\"submit\"\n                    className={styles.newContact__button}\n                >Add contact</button>\n            </form>    \n        </div>\n        )       \n    }\n\n\nexport default NewContact\n\n\n"],"names":["useState","name","setName","number","setNumber","data","useGetContactsQuery","useCreateContactMutation","addContact","onInputChange","e","target","value","className","styles","onSubmit","preventDefault","input","map","contact","toLowerCase","includes","alert","addContacts","htmlFor","type","placeholder","pattern","title","required","onChange"],"sourceRoot":""}